// <auto-generated />
using System;
using MaisonReposApi.Domaines.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaisonReposApi.Domaines.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230112095226_myFirstMigration")]
    partial class myFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MaisonReposApi.Entities.Boisson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategorieDesSoinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeBoisson")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescBoisson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QteBoisson")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Normal");

                    b.Property<int>("personnelId")
                        .HasColumnType("int");

                    b.Property<int>("residantSuiviId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieDesSoinId");

                    b.HasIndex("personnelId");

                    b.HasIndex("residantSuiviId");

                    b.ToTable("Boissons", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.CategorieDesSoin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategorieSoin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("CategorieDesSoins", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Fonction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("fonction")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("fonction")
                        .IsUnique();

                    b.ToTable("Fonctions", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Parametre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategorieDesSoinId")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Saturation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(95);

                    b.Property<double>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(36.700000000000003);

                    b.Property<double>("Tension")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(12.6);

                    b.Property<int>("personnelId")
                        .HasColumnType("int");

                    b.Property<int>("residantSuiviId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieDesSoinId");

                    b.HasIndex("personnelId");

                    b.HasIndex("residantSuiviId");

                    b.ToTable("Parametres", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Personnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("FonctionId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FonctionId");

                    b.HasIndex(new[] { "Email" }, "Key_unique_email")
                        .IsUnique();

                    b.HasIndex(new[] { "Matricule" }, "Key_unique_matricule")
                        .IsUnique();

                    b.ToTable("Personnels", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Repas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategorieDesSoinId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTimeRepas")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescRepas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QteRepas")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Normal");

                    b.Property<int>("personnelId")
                        .HasColumnType("int");

                    b.Property<int>("residantSuiviId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieDesSoinId");

                    b.HasIndex("personnelId");

                    b.HasIndex("residantSuiviId");

                    b.ToTable("Repas", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Residant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateEntre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateNass")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSortie")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Matricule" }, "Key_unique_matricule")
                        .IsUnique()
                        .HasDatabaseName("Key_unique_matricule1")
                        .HasFilter("[Matricule] IS NOT NULL");

                    b.ToTable("Residants", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.ResidantSuivi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("residantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("residantId");

                    b.HasIndex(new[] { "Matricule" }, "key_unique_Matricule")
                        .IsUnique();

                    b.ToTable("ResidantSuivis", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.residantSuiviTherapie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdResidantSuivi")
                        .HasColumnType("int");

                    b.Property<int>("IdTherapie")
                        .HasColumnType("int");

                    b.Property<int>("PersonnelDoneId")
                        .HasColumnType("int");

                    b.Property<int?>("residantId")
                        .HasColumnType("int");

                    b.Property<int?>("therapieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdResidantSuivi");

                    b.HasIndex("IdTherapie");

                    b.HasIndex("PersonnelDoneId");

                    b.HasIndex("residantId");

                    b.HasIndex("therapieId");

                    b.ToTable("ResidantSuiviTherapies", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Selle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategorieDesSoinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeSelle")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescSelle")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Normal");

                    b.Property<int>("NbreDeSelle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("personnelId")
                        .HasColumnType("int");

                    b.Property<int>("residantSuiviId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieDesSoinId");

                    b.HasIndex("personnelId");

                    b.HasIndex("residantSuiviId");

                    b.ToTable("Selles", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.SoinsAjout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategorieDesSoinsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescSoins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelCreatedId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieDesSoinsId");

                    b.HasIndex("PersonnelCreatedId");

                    b.ToTable("SoinsAjouts", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.SoinsAjoutResidantSuivi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdResidantSuivi")
                        .HasColumnType("int");

                    b.Property<int>("IdSoinsAjout")
                        .HasColumnType("int");

                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<int?>("ResidantSuiviId")
                        .HasColumnType("int");

                    b.Property<int?>("SoinsAjoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdResidantSuivi");

                    b.HasIndex("IdSoinsAjout");

                    b.HasIndex("PersonnelId");

                    b.HasIndex("ResidantSuiviId");

                    b.HasIndex("SoinsAjoutId");

                    b.ToTable("SoinsAjoutResidantSuivis", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Therapie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategorieDesSoinId")
                        .HasColumnType("int");

                    b.Property<string>("DescTherapie")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("Contactez medecin.");

                    b.Property<DateTime>("Horaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 1, 12, 10, 52, 25, 939, DateTimeKind.Local).AddTicks(2080));

                    b.Property<int>("personnelCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("residantSuiviId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieDesSoinId");

                    b.HasIndex("personnelCreatedId");

                    b.HasIndex("residantSuiviId");

                    b.ToTable("Therapies", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.TherapieTrancheHoraire", b =>
                {
                    b.Property<int>("IdTherapie")
                        .HasColumnType("int");

                    b.Property<int>("IdTrancheHoraire")
                        .HasColumnType("int");

                    b.Property<int?>("therapieId")
                        .HasColumnType("int");

                    b.Property<int?>("trancheHoraireId")
                        .HasColumnType("int");

                    b.HasKey("IdTherapie", "IdTrancheHoraire");

                    b.HasIndex("IdTrancheHoraire");

                    b.HasIndex("therapieId");

                    b.HasIndex("trancheHoraireId");

                    b.ToTable("TherapieTrancheHoraires", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Toillette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategorieDesSoinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeToillette")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescToillete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("personnelId")
                        .HasColumnType("int");

                    b.Property<int>("residantSuiviId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieDesSoinId");

                    b.HasIndex("personnelId");

                    b.HasIndex("residantSuiviId");

                    b.ToTable("Toillettes", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.TrancheHoraire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Horaire")
                        .HasColumnType("datetime2");

                    b.Property<int>("personnelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("personnelId");

                    b.ToTable("TrancheHoraires", (string)null);
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Boisson", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.CategorieDesSoin", null)
                        .WithMany("Boissons")
                        .HasForeignKey("CategorieDesSoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("Boissons")
                        .HasForeignKey("personnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", null)
                        .WithMany("Boissons")
                        .HasForeignKey("residantSuiviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Parametre", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.CategorieDesSoin", null)
                        .WithMany("Parametres")
                        .HasForeignKey("CategorieDesSoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", "personnel")
                        .WithMany("Parametres")
                        .HasForeignKey("personnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", "residantSuivi")
                        .WithMany("Parametres")
                        .HasForeignKey("residantSuiviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personnel");

                    b.Navigation("residantSuivi");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Personnel", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.Fonction", null)
                        .WithMany("Personnels")
                        .HasForeignKey("FonctionId");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Repas", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.CategorieDesSoin", null)
                        .WithMany("Repas")
                        .HasForeignKey("CategorieDesSoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("Repas")
                        .HasForeignKey("personnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", null)
                        .WithMany("Repas")
                        .HasForeignKey("residantSuiviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaisonReposApi.Entities.ResidantSuivi", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.Residant", null)
                        .WithMany("residants")
                        .HasForeignKey("residantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaisonReposApi.Entities.residantSuiviTherapie", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", null)
                        .WithMany("ResidantSuiviTherapies")
                        .HasForeignKey("IdResidantSuivi")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Therapie", null)
                        .WithMany("ResidantSuiviTherapies")
                        .HasForeignKey("IdTherapie")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("residantSuiviTherapies")
                        .HasForeignKey("PersonnelDoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", "residant")
                        .WithMany()
                        .HasForeignKey("residantId");

                    b.HasOne("MaisonReposApi.Entities.Therapie", "therapie")
                        .WithMany()
                        .HasForeignKey("therapieId");

                    b.Navigation("residant");

                    b.Navigation("therapie");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Selle", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.CategorieDesSoin", null)
                        .WithMany("Selles")
                        .HasForeignKey("CategorieDesSoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("Selles")
                        .HasForeignKey("personnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", null)
                        .WithMany("Selles")
                        .HasForeignKey("residantSuiviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaisonReposApi.Entities.SoinsAjout", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.CategorieDesSoin", null)
                        .WithMany("SoinsAjouts")
                        .HasForeignKey("CategorieDesSoinsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("SoinsAjouts")
                        .HasForeignKey("PersonnelCreatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaisonReposApi.Entities.SoinsAjoutResidantSuivi", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", null)
                        .WithMany("SoinsAjoutResidantSuivis")
                        .HasForeignKey("IdResidantSuivi")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.SoinsAjout", null)
                        .WithMany("SoinsAjoutResidantSuivis")
                        .HasForeignKey("IdSoinsAjout")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("SoinsAjoutResidantsSuivis")
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", "ResidantSuivi")
                        .WithMany()
                        .HasForeignKey("ResidantSuiviId");

                    b.HasOne("MaisonReposApi.Entities.SoinsAjout", "SoinsAjout")
                        .WithMany()
                        .HasForeignKey("SoinsAjoutId");

                    b.Navigation("ResidantSuivi");

                    b.Navigation("SoinsAjout");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Therapie", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.CategorieDesSoin", null)
                        .WithMany("therapies")
                        .HasForeignKey("CategorieDesSoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("therapies")
                        .HasForeignKey("personnelCreatedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", null)
                        .WithMany("therapies")
                        .HasForeignKey("residantSuiviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaisonReposApi.Entities.TherapieTrancheHoraire", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.Therapie", null)
                        .WithMany("TherapieTrancheHoraires")
                        .HasForeignKey("IdTherapie")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.TrancheHoraire", null)
                        .WithMany("TherapieTrancheHoraires")
                        .HasForeignKey("IdTrancheHoraire")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Therapie", "therapie")
                        .WithMany()
                        .HasForeignKey("therapieId");

                    b.HasOne("MaisonReposApi.Entities.TrancheHoraire", "trancheHoraire")
                        .WithMany()
                        .HasForeignKey("trancheHoraireId");

                    b.Navigation("therapie");

                    b.Navigation("trancheHoraire");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Toillette", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.CategorieDesSoin", null)
                        .WithMany("Toillettes")
                        .HasForeignKey("CategorieDesSoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("Toillette")
                        .HasForeignKey("personnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaisonReposApi.Entities.ResidantSuivi", null)
                        .WithMany("Toillettes")
                        .HasForeignKey("residantSuiviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaisonReposApi.Entities.TrancheHoraire", b =>
                {
                    b.HasOne("MaisonReposApi.Entities.Personnel", null)
                        .WithMany("trancheHoraires")
                        .HasForeignKey("personnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaisonReposApi.Entities.CategorieDesSoin", b =>
                {
                    b.Navigation("Boissons");

                    b.Navigation("Parametres");

                    b.Navigation("Repas");

                    b.Navigation("Selles");

                    b.Navigation("SoinsAjouts");

                    b.Navigation("Toillettes");

                    b.Navigation("therapies");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Fonction", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Personnel", b =>
                {
                    b.Navigation("Boissons");

                    b.Navigation("Parametres");

                    b.Navigation("Repas");

                    b.Navigation("Selles");

                    b.Navigation("SoinsAjoutResidantsSuivis");

                    b.Navigation("SoinsAjouts");

                    b.Navigation("Toillette");

                    b.Navigation("residantSuiviTherapies");

                    b.Navigation("therapies");

                    b.Navigation("trancheHoraires");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Residant", b =>
                {
                    b.Navigation("residants");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.ResidantSuivi", b =>
                {
                    b.Navigation("Boissons");

                    b.Navigation("Parametres");

                    b.Navigation("Repas");

                    b.Navigation("ResidantSuiviTherapies");

                    b.Navigation("Selles");

                    b.Navigation("SoinsAjoutResidantSuivis");

                    b.Navigation("Toillettes");

                    b.Navigation("therapies");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.SoinsAjout", b =>
                {
                    b.Navigation("SoinsAjoutResidantSuivis");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.Therapie", b =>
                {
                    b.Navigation("ResidantSuiviTherapies");

                    b.Navigation("TherapieTrancheHoraires");
                });

            modelBuilder.Entity("MaisonReposApi.Entities.TrancheHoraire", b =>
                {
                    b.Navigation("TherapieTrancheHoraires");
                });
#pragma warning restore 612, 618
        }
    }
}
